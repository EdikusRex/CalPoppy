@import "./colors.css";

:root {
    --roundCorner: 2em;
    --pointedCorner: 0.75em;
    --feedbackMargin: 20px;
}

/* animation styles */
@keyframes animSpringOpacity {
    from {opacity: 0;}
    to {opacity: 1;}
}

@keyframes animSpringFontSize {
    from {fontSize: '5px';}
    to {fontSize: '20px';}
}

.msgWrapper {
    width: max-content;
    max-width: 70%;
    /* margin: 20px 0; */

    animation-name: animSpringOpacity;
    animation-duration: 0.5s;
}

.msgWrapperBot {
    align-self: flex-start;
}

.msgWrapperUser {
    align-self: flex-end;
}

/* basic formatting for a message text */
.msg {
    font-family: 'Source Sans Pro', sans-serif;
    display: inline-block;
    padding: 1em 0.75em;
    box-shadow: var(--sealGrayShadow);
    border: 1px solid var(--sealGray);
    border-top-left-radius: var(--roundCorner);
    border-top-right-radius: var(--roundCorner);

    /* spring animation */
    animation-name: animSpringFontSize;
    animation-duration: 5s;
}

/* formatting for messages from bot */
.msgBot {
    color: white;
    background-color: var(--polyGreen);
    /* text-align: left; */
    /* bevels chat bubbles with the bottom left corner more pointed */
    border-bottom-left-radius: var(--pointedCorner);
    border-bottom-right-radius: var(--roundCorner);
    /* adds in space for feedback icons */
    margin-left: var(--feedbackMargin);
}

/* formatting for messages from user */
.msgUser {
    color: black;
    background-color: white;
    /* text-align: right; */
    /* bevels chat bubbles with the bottom right corner more pointed */
    border-bottom-left-radius: var(--roundCorner);
    border-bottom-right-radius: var(--pointedCorner);
}

.bubbleHover {
    @media (hover: hover) and (pointer: fine) {
        &:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 15px var(--sealGrayShadow);
        }
    }
}

.feedbackIcon {
    display: inline-block;
    margin: 0 5px;
    cursor: pointer;
    vertical-align: middle;
    fill: transparent;
    transition: fill 0.4s, transform 0.4s;
}

.feedbackIconPositive {
    @media (hover: hover) and (pointer: fine) {
        &:hover {
            fill: green;
            transform: translateY(-2px);
        }
    }
}

.feedbackIconNegative {
    @media (hover: hover) and (pointer: fine) {
        &:hover {
            fill: red;
            transform: translateY(2px);
        }
    }
}

/* a rem is 16 px */
.margin1rem {
    margin: 1 rem;
}

.margin2rem {
    margin: 2rem;
}

.beveledEdge {
    border-radius: 50%;
}